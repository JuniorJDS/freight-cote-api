// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/indicators": {
            "post": {
                "description": "Route to receive input data and generate a fictional quote using the Fast Freight API.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quote"
                ],
                "summary": "Create quote",
                "parameters": [
                    {
                        "description": "Quote Datas",
                        "name": "quote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input.Quote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.QuoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.InfoResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.InfoResponse"
                        }
                    }
                }
            }
        },
        "/quote/metrics": {
            "get": {
                "description": "Gets all available metrics.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quote"
                ],
                "summary": "Get Metrics",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "quantidade de cotações (ordem decrescente)",
                        "name": "last_quotes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Metrics"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.InfoResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "input.Address": {
            "type": "object",
            "required": [
                "zipcode"
            ],
            "properties": {
                "zipcode": {
                    "type": "string"
                }
            }
        },
        "input.Quote": {
            "type": "object",
            "required": [
                "recipient",
                "volumes"
            ],
            "properties": {
                "recipient": {
                    "$ref": "#/definitions/input.Recipient"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/input.Volume"
                    }
                }
            }
        },
        "input.Recipient": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "$ref": "#/definitions/input.Address"
                }
            }
        },
        "input.Volume": {
            "type": "object",
            "required": [
                "amount",
                "category",
                "height",
                "length",
                "price",
                "unitary_weight",
                "width"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "category": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "length": {
                    "type": "number"
                },
                "price": {
                    "type": "number"
                },
                "sku": {
                    "type": "string"
                },
                "unitary_weight": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "response.Carrier": {
            "type": "object",
            "properties": {
                "deadline": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "service": {
                    "type": "string"
                }
            }
        },
        "response.InfoResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.Metric": {
            "type": "object",
            "properties": {
                "avg": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "response.Metrics": {
            "type": "object",
            "properties": {
                "by_carriers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Metric"
                    }
                },
                "highest_price": {
                    "type": "number"
                },
                "lowest_price": {
                    "type": "number"
                }
            }
        },
        "response.QuoteResponse": {
            "type": "object",
            "properties": {
                "carrier": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Carrier"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "freight cote - API",
	Description:      "API for freight cote operations",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
